'use client'
import Header from '@/components/Header'
import { useState, useEffect } from 'react'

// Airtable –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø
const AIRTABLE_CONFIG = {
  API_KEY: 'patQfujQaKiRKW0ix.9968ac4d5d84d30dc7f7ac663c993282324a6cfb07125313b2c58268f943b4ee',
  BASE_ID: 'appayVD9m1J1bR13Z', // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û
  TABLE_ID: 'tblg1UR9TmB4gLS7i'  // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û
}

interface CasePhoto {
  id: string
  mediaUrl: string
  mediaType: 'image' | 'video'
  description?: string
  projectName: string
  city: string
}

interface Case {
  id: string
  projectName: string
  city: string
  previewImage: string
  photos: CasePhoto[]
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
function extractCityFromProjectName(projectName: string): string {
  const name = projectName.toLowerCase()
  if (name.includes('—è–ª—Ç–∞')) return '–Ø–ª—Ç–∞'
  if (name.includes('—Ñ–µ–æ–¥–æ—Å–∏—è')) return '–§–µ–æ–¥–æ—Å–∏—è'  
  if (name.includes('–±–∞—Ö—á–∏—Å–∞—Ä–∞–π')) return '–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π'
  if (name.includes('–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä')) return '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä'
  if (name.includes('—Å–æ—á–∏')) return '–°–æ—á–∏'
  return '–ö—Ä—ã–º'
}

// Fallback –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ Airtable –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
const FALLBACK_CASES: Case[] = [
  {
    id: 'case-1',
    projectName: '–ò—Ä–∏–Ω–∞',
    city: '–Ø–ª—Ç–∞',
    previewImage: 'https://via.placeholder.com/800x600/4F46E5/FFFFFF?text=–ö—É—Ö–Ω—è+–ò—Ä–∏–Ω—ã',
    photos: [
      {
        id: 'photo-1',
        mediaUrl: 'https://via.placeholder.com/800x600/4F46E5/FFFFFF?text=–ö—É—Ö–Ω—è+–ò—Ä–∏–Ω—ã+1',
        mediaType: 'image',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫—É—Ö–Ω—è —Å –æ—Å—Ç—Ä–æ–≤–æ–º',
        projectName: '–ò—Ä–∏–Ω–∞',
        city: '–Ø–ª—Ç–∞'
      },
      {
        id: 'photo-2',
        mediaUrl: 'https://via.placeholder.com/800x600/7C3AED/FFFFFF?text=–ö—É—Ö–Ω—è+–ò—Ä–∏–Ω—ã+2',
        mediaType: 'image',
        description: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑–æ–Ω–∞ –≥–æ—Ç–æ–≤–∫–∏',
        projectName: '–ò—Ä–∏–Ω–∞',
        city: '–Ø–ª—Ç–∞'
      }
    ]
  },
  {
    id: 'case-2',
    projectName: '–ú–∞—Ä–∏–Ω–∞',
    city: '–§–µ–æ–¥–æ—Å–∏—è',
    previewImage: 'https://via.placeholder.com/800x600/059669/FFFFFF?text=–ö—É—Ö–Ω—è+–ú–∞—Ä–∏–Ω—ã',
    photos: [
      {
        id: 'photo-3',
        mediaUrl: 'https://via.placeholder.com/800x600/059669/FFFFFF?text=–ö—É—Ö–Ω—è+–ú–∞—Ä–∏–Ω—ã+1',
        mediaType: 'image',
        description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –∫—É—Ö–Ω—è –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º —Å—Ç–∏–ª–µ',
        projectName: '–ú–∞—Ä–∏–Ω–∞',
        city: '–§–µ–æ–¥–æ—Å–∏—è'
      },
      {
        id: 'photo-4',
        mediaUrl: 'https://via.placeholder.com/800x600/DC2626/FFFFFF?text=–ö—É—Ö–Ω—è+–ú–∞—Ä–∏–Ω—ã+2',
        mediaType: 'image',
        description: '–î–µ—Ç–∞–ª–∏ –∏ —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞',
        projectName: '–ú–∞—Ä–∏–Ω–∞',
        city: '–§–µ–æ–¥–æ—Å–∏—è'
      }
    ]
  },
  {
    id: 'case-3',
    projectName: '–¢–∏–º—É—Ä',
    city: '–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π',
    previewImage: 'https://via.placeholder.com/800x600/EA580C/FFFFFF?text=–ö—É—Ö–Ω—è+–¢–∏–º—É—Ä–∞',
    photos: [
      {
        id: 'photo-5',
        mediaUrl: 'https://via.placeholder.com/800x600/EA580C/FFFFFF?text=–ö—É—Ö–Ω—è+–¢–∏–º—É—Ä–∞+1',
        mediaType: 'image',
        description: '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∫—É—Ö–Ω—è',
        projectName: '–¢–∏–º—É—Ä',
        city: '–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π'
      },
      {
        id: 'photo-6',
        mediaUrl: 'https://via.placeholder.com/800x600/9333EA/FFFFFF?text=–ö—É—Ö–Ω—è+–¢–∏–º—É—Ä–∞+2',
        mediaType: 'image',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è',
        projectName: '–¢–∏–º—É—Ä',
        city: '–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π'
      }
    ]
  }
]

export default function KeisyPage() {
  const [cases, setCases] = useState<Case[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [selectedCase, setSelectedCase] = useState<Case | null>(null)
  const [isModalOpen, setIsModalOpen] = useState(false)
  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0)

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–µ–π—Å–æ–≤ –∏–∑ Airtable
  useEffect(() => {
    loadCasesFromAirtable()
  }, [])

  async function loadCasesFromAirtable() {
    try {
      console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–µ–π—Å—ã –∏–∑ Airtable...')
      console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:', AIRTABLE_CONFIG)
      
      const response = await fetch(
        `https://api.airtable.com/v0/appayVD9m1J1bR13Z/tblg1UR9TmB4gLS7i?filterByFormula={–ö–µ–π—Å}=1`,
        {
          headers: { 
            'Authorization': `Bearer patQfujQaKiRKW0ix.9968ac4d5d84d30dc7f7ac663c993282324a6cfb07125313b2c58268f943b4ee`,
            'Content-Type': 'application/json'
          }
        }
      )
      
      console.log('üì° –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText)
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`)
      }
      
      const data = await response.json()
      console.log('üìä –î–∞–Ω–Ω—ã–µ –æ—Ç Airtable:', data)
      console.log('üîç –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ö–µ–π—Å=1:', data.records.length)
      
      if (!data.records || data.records.length === 0) {
        console.log('‚ö†Ô∏è –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π —Å –ö–µ–π—Å=1, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ')
        setCases(FALLBACK_CASES)
        setLoading(false)
        return
      }
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø—Ä–æ–µ–∫—Ç—É
      const groupedCases: { [key: string]: CasePhoto[] } = {}
      
      data.records.forEach((record: any) => {
        const projectName = record.fields['–û–±—ä–µ–∫—Ç'] || '–ü—Ä–æ–µ–∫—Ç'
        const city = extractCityFromProjectName(projectName)
        
        console.log('üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å—å:', { projectName, city, fields: record.fields })
        
        if (!groupedCases[projectName]) {
          groupedCases[projectName] = []
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –æ—Å–Ω–æ–≤–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –≤–∏–¥–µ–æ
        const mediaUrl = record.fields['–ü—Ä–µ–≤—å—é'] && record.fields['–¢–∏–ø —Ñ–∞–π–ª–∞'] !== 'video/mp4' 
          ? record.fields['–ü—Ä–µ–≤—å—é'][0]?.url 
          : record.fields['–°—Å—ã–ª–∫–∞']
        
        groupedCases[projectName].push({
          id: record.id,
          mediaUrl: mediaUrl,
          mediaType: record.fields['–¢–∏–ø —Ñ–∞–π–ª–∞'] === 'video/mp4' ? 'video' : 'image',
          description: record.fields['–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ'] || record.fields['–û–ø–∏—Å–∞–Ω–∏–µ'] || '',
          projectName,
          city
        })
      })
      
      console.log('üì¶ –°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–µ–π—Å—ã:', groupedCases)
      console.log('üì¶ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤:', Object.keys(groupedCases).length)
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤ Case - –ë–ï–ó –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô!
      const result = Object.entries(groupedCases).map(([projectName, photos], index) => ({
        id: `case-${index + 1}`,
        projectName: photos[0].projectName,
        city: photos[0].city,
        previewImage: photos[0].mediaUrl,
        photos
      }))
      
      console.log('‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result)
      console.log('‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã—Ö –∫–µ–π—Å–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', result.length)
      setCases(result)
      setLoading(false)
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–µ–π—Å–æ–≤:', error)
      setError(error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
      console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏')
      setCases(FALLBACK_CASES)
      setLoading(false)
    }
  }

  const openCaseModal = (caseItem: Case) => {
    setSelectedCase(caseItem)
    setCurrentPhotoIndex(0)
    setIsModalOpen(true)
  }

  const closeModal = () => {
    setIsModalOpen(false)
    setSelectedCase(null)
    setCurrentPhotoIndex(0)
  }

  const nextPhoto = () => {
    if (selectedCase && currentPhotoIndex < selectedCase.photos.length - 1) {
      setCurrentPhotoIndex(currentPhotoIndex + 1)
    }
  }

  const prevPhoto = () => {
    if (currentPhotoIndex > 0) {
      setCurrentPhotoIndex(currentPhotoIndex - 1)
    }
  }

  if (loading) {
    return (
      <>
        <Header />
        <main className="min-h-screen bg-white">
          <section className="py-24 bg-neutral-50">
            <div className="container-custom">
              <div className="mx-auto max-w-2xl text-center">
                <h1 className="heading-xl mb-6">–ù–∞—à–∏ –∫–µ–π—Å—ã</h1>
                <div className="flex items-center justify-center gap-2">
                  <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-neutral-600"></div>
                  <p className="text-body text-neutral-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã...</p>
                </div>
              </div>
            </div>
          </section>
        </main>
      </>
    )
  }

  return (
    <>
      <Header />
      <main className="min-h-screen bg-white">
        {/* Hero Section */}
        <section className="py-24 bg-neutral-50">
          <div className="container-custom">
            <div className="mx-auto max-w-2xl text-center">
              <h1 className="heading-xl mb-6">
                –ù–∞—à–∏ –∫–µ–π—Å—ã
              </h1>
              <p className="text-body text-neutral-600 mb-8">
                –†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. 
                –û—Ç –∑–∞–¥–∞—á–∏ –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ - –∫–∞–∫ –º—ã —Ä–µ—à–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.
              </p>
              {error && (
                <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
                  <p className="text-yellow-800 text-sm">
                    ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ. –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {error}
                  </p>
                </div>
              )}
            </div>
          </div>
        </section>

        {/* Cases */}
        <section className="py-24 bg-white">
          <div className="container-custom">
            <div className="space-y-24">
              {cases.map((caseItem) => (
                <div key={caseItem.id} className="bg-neutral-50 rounded-2xl p-8 group cursor-pointer hover:shadow-lg transition-all duration-200">
                  {/* Case Header */}
                  <div className="mb-8">
                    <div className="flex items-center gap-4 mb-4">
                      <h2 className="heading-lg group-hover:text-neutral-700 transition-colors">
                        {caseItem.projectName} - –∏—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞
                      </h2>
                      <span className="inline-flex items-center rounded-full bg-neutral-200 px-3 py-1 text-xs font-medium text-neutral-700">
                        {caseItem.city}
                      </span>
                    </div>
                    
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                      <div>
                        <span className="font-semibold text-neutral-900">–ü—Ä–æ–µ–∫—Ç:</span>
                        <span className="text-neutral-600 ml-2">{caseItem.projectName}</span>
                      </div>
                      <div>
                        <span className="font-semibold text-neutral-900">–ì–æ—Ä–æ–¥:</span>
                        <span className="text-neutral-600 ml-2">{caseItem.city}</span>
                      </div>
                      <div>
                        <span className="font-semibold text-neutral-900">–§–æ—Ç–æ:</span>
                        <span className="text-neutral-600 ml-2">{caseItem.photos.length} —à—Ç.</span>
                      </div>
                    </div>
                  </div>

                  {/* Case Image */}
                  <div 
                    className="aspect-[16/9] bg-neutral-100 rounded-xl mb-8 overflow-hidden group-hover:scale-[1.02] transition-transform duration-200 cursor-pointer"
                    onClick={() => openCaseModal(caseItem)}
                  >
                    <img 
                      src={caseItem.previewImage} 
                      alt={`${caseItem.projectName} - ${caseItem.city}`}
                      className="w-full h-full object-cover"
                      onError={(e) => {
                        const target = e.target as HTMLImageElement
                        target.style.display = 'none'
                        target.nextElementSibling?.classList.remove('hidden')
                      }}
                    />
                    <div className="w-full h-full bg-gradient-to-br from-neutral-200 to-neutral-300 flex items-center justify-center hidden">
                      <svg className="w-16 h-16 text-neutral-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                    </div>
                  </div>

                  {/* Case Content */}
                  <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div>
                      <h3 className="font-semibold text-neutral-900 mb-3">–ü—Ä–æ–µ–∫—Ç</h3>
                      <p className="text-neutral-600 leading-relaxed">
                        {caseItem.projectName} –≤ –≥–æ—Ä–æ–¥–µ {caseItem.city}. 
                        –ü—Ä–æ–µ–∫—Ç –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –º–µ–±–µ–ª—å —Å –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º.
                      </p>
                    </div>
                    
                    <div>
                      <h3 className="font-semibold text-neutral-900 mb-3">–†–µ—à–µ–Ω–∏–µ</h3>
                      <p className="text-neutral-600 leading-relaxed">
                        –°–æ–∑–¥–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞. 
                        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.
                      </p>
                    </div>
                    
                    <div>
                      <h3 className="font-semibold text-neutral-900 mb-3">–†–µ–∑—É–ª—å—Ç–∞—Ç</h3>
                      <p className="text-neutral-600 leading-relaxed">
                        –ö–ª–∏–µ–Ω—Ç –¥–æ–≤–æ–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º. –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É—é—Ç–Ω—ã–º, 
                        —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏ —Å—Ç–∏–ª—å–Ω—ã–º. –í—Å–µ –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–¥—É–º–∞–Ω—ã –¥–æ –º–µ–ª–æ—á–µ–π.
                      </p>
                    </div>
                  </div>

                  {/* CTA Button */}
                  <div className="mt-6 text-center">
                    <button 
                      className="btn-primary inline-block"
                      onClick={() => openCaseModal(caseItem)}
                    >
                      –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ñ–æ—Ç–æ ({caseItem.photos.length})
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-24 bg-neutral-50">
          <div className="container-custom">
            <div className="mx-auto max-w-2xl text-center">
              <h2 className="heading-lg mb-6">
                –•–æ—Ç–∏—Ç–µ —Ç–∞–∫—É—é –∂–µ –∏—Å—Ç–æ—Ä–∏—é —É—Å–ø–µ—Ö–∞?
              </h2>
              <p className="text-body text-neutral-600 mb-8">
                –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –ø—Ä–æ–µ–∫—Ç–µ, –∏ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –¥–ª—è –≤–∞—Å 
                –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –º–µ–±–µ–ª—å —Å –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button className="btn-primary">
                  –û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
                </button>
                <button className="btn-secondary">
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã
                </button>
              </div>
            </div>
          </div>
        </section>
      </main>

      {/* –£–ª—É—á—à–µ–Ω–Ω—ã–π Modal –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–µ–π—Å–∞ */}
      {isModalOpen && selectedCase && (
        <div className="fixed inset-0 bg-black bg-opacity-95 z-50 overflow-y-auto">
          <div className="min-h-screen flex items-start justify-center p-4">
            <div className="relative w-full max-w-7xl bg-white rounded-lg overflow-hidden">
              
              {/* Header –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
              <div className="bg-neutral-50 px-6 py-4 border-b">
                <div className="flex items-center justify-between">
                  <div>
                    <h2 className="text-2xl font-bold text-neutral-900">
                      {selectedCase.projectName}
                    </h2>
                    <p className="text-neutral-600">{selectedCase.city}</p>
                  </div>
                  <button 
                    onClick={closeModal}
                    className="text-neutral-500 hover:text-neutral-700 transition-colors"
                  >
                    <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
              </div>

              {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
              <div className="flex flex-col lg:flex-row">
                
                {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –ü—Ä–µ–≤—å—é –≥–∞–ª–µ—Ä–µ—è */}
                <div className="lg:w-1/3 p-6 border-r border-neutral-200">
                  <h3 className="text-lg font-semibold mb-4">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞</h3>
                  <div className="grid grid-cols-2 gap-3">
                    {selectedCase.photos.map((photo, index) => (
                      <div 
                        key={photo.id}
                        className={`aspect-square bg-neutral-100 rounded-lg overflow-hidden cursor-pointer border-2 transition-all ${
                          index === currentPhotoIndex ? 'border-neutral-800' : 'border-transparent hover:border-neutral-300'
                        }`}
                        onClick={() => setCurrentPhotoIndex(index)}
                      >
                        {photo.mediaType === 'video' ? (
                          <div className="w-full h-full bg-neutral-200 flex items-center justify-center">
                            <svg className="w-8 h-8 text-neutral-500" fill="currentColor" viewBox="0 0 24 24">
                              <path d="M8 5v14l11-7z"/>
                            </svg>
                          </div>
                        ) : (
                          <img 
                            src={photo.mediaUrl} 
                            alt={`${selectedCase.projectName} - ${index + 1}`}
                            className="w-full h-full object-cover"
                          />
                        )}
                      </div>
                    ))}
                  </div>

                  {/* –ò—Å—Ç–æ—Ä–∏—è –∫–ª–∏–µ–Ω—Ç–∞ */}
                  <div className="mt-8">
                    <h3 className="text-lg font-semibold mb-4">–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞</h3>
                    <div className="space-y-4">
                      <div>
                        <h4 className="font-medium text-neutral-900 mb-2">–ó–∞–¥–∞—á–∞</h4>
                        <p className="text-sm text-neutral-600 leading-relaxed">
                          –ö–ª–∏–µ–Ω—Ç {selectedCase.projectName} –∏–∑ –≥–æ—Ä–æ–¥–∞ {selectedCase.city} –æ–±—Ä–∞—Ç–∏–ª—Å—è —Å –∑–∞–¥–∞—á–µ–π —Å–æ–∑–¥–∞–Ω–∏—è 
                          —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏ —Å—Ç–∏–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞. –¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É—á–µ—Å—Ç—å –≤—Å–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è —Å–µ–º—å–∏ –∏ 
                          –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–º–µ—â–µ–Ω–∏—è.
                        </p>
                      </div>
                      
                      <div>
                        <h4 className="font-medium text-neutral-900 mb-2">–†–µ—à–µ–Ω–∏–µ</h4>
                        <p className="text-sm text-neutral-600 leading-relaxed">
                          –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. 
                          –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —É–¥–µ–ª–∏–ª–∏ —ç—Ä–≥–æ–Ω–æ–º–∏–∫–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
                        </p>
                      </div>
                      
                      <div>
                        <h4 className="font-medium text-neutral-900 mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç</h4>
                        <p className="text-sm text-neutral-600 leading-relaxed">
                          –ü–æ–ª—É—á–∏–ª–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º –∫–ª–∏–µ–Ω—Ç–∞. 
                          –í—Å–µ –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–¥—É–º–∞–Ω—ã, –∫–∞—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>

                {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
                <div className="lg:w-2/3 p-6">
                  <div className="aspect-[4/3] bg-neutral-100 rounded-lg overflow-hidden mb-4 relative group">
                    {selectedCase.photos[currentPhotoIndex].mediaType === 'video' ? (
                      <video 
                        src={selectedCase.photos[currentPhotoIndex].mediaUrl}
                        controls
                        className="w-full h-full object-contain bg-black"
                        autoPlay
                        muted={false}
                      />
                    ) : (
                      <>
                        <img 
                          src={selectedCase.photos[currentPhotoIndex].mediaUrl}
                          alt={`${selectedCase.projectName} - —Ñ–æ—Ç–æ ${currentPhotoIndex + 1}`}
                          className="w-full h-full object-contain cursor-pointer"
                          onClick={() => {
                            // –û—Ç–∫—Ä—ã—Ç–∏–µ –≤ –ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ
                            const img = new Image();
                            img.src = selectedCase.photos[currentPhotoIndex].mediaUrl;
                            const newWindow = window.open('', '_blank');
                            if (newWindow) {
                              newWindow.document.write(`
                                <html>
                                  <head><title>${selectedCase.projectName} - –§–æ—Ç–æ ${currentPhotoIndex + 1}</title></head>
                                  <body style="margin:0;background:#000;display:flex;align-items:center;justify-content:center;min-height:100vh;">
                                    <img src="${img.src}" style="max-width:100%;max-height:100vh;object-fit:contain;" />
                                  </body>
                                </html>
                              `);
                            }
                          }}
                        />
                        
                        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ */}
                        <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all flex items-center justify-center opacity-0 group-hover:opacity-100">
                          <div className="bg-white bg-opacity-90 px-3 py-2 rounded-lg text-sm font-medium">
                            –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                          </div>
                        </div>
                      </>
                    )}
                    
                    {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–µ–ª–∫–∏ */}
                    {currentPhotoIndex > 0 && (
                      <button 
                        onClick={prevPhoto}
                        className="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-80 hover:bg-opacity-100 rounded-full p-2 transition-all"
                      >
                        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                        </svg>
                      </button>
                    )}

                    {currentPhotoIndex < selectedCase.photos.length - 1 && (
                      <button 
                        onClick={nextPhoto}
                        className="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-80 hover:bg-opacity-100 rounded-full p-2 transition-all"
                      >
                        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                        </svg>
                      </button>
                    )}
                  </div>

                  {/* –û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–æ—Ç–æ */}
                  <div className="bg-neutral-50 rounded-lg p-4">
                    <h4 className="font-medium text-neutral-900 mb-2">
                      –§–æ—Ç–æ {currentPhotoIndex + 1} –∏–∑ {selectedCase.photos.length}
                    </h4>
                    <p className="text-sm text-neutral-600 leading-relaxed">
                      {selectedCase.photos[currentPhotoIndex].description || 
                      `–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ–µ–∫—Ç–∞ ${selectedCase.projectName} –≤ –≥–æ—Ä–æ–¥–µ ${selectedCase.city}. 
                      –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º.`}
                    </p>
                    
                    {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ */}
                    <div className="mt-3 flex gap-4 text-xs text-neutral-500">
                      <span>–ü—Ä–æ–µ–∫—Ç: {selectedCase.projectName}</span>
                      <span>–ì–æ—Ä–æ–¥: {selectedCase.city}</span>
                      <span>–¢–∏–ø: {selectedCase.photos[currentPhotoIndex].mediaType === 'video' ? '–í–∏–¥–µ–æ' : '–§–æ—Ç–æ'}</span>
                    </div>
                  </div>

                  {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                  <div className="mt-6 flex gap-4">
                    <button className="btn-primary">
                      –ó–∞–∫–∞–∑–∞—Ç—å –ø–æ—Ö–æ–∂–∏–π –ø—Ä–æ–µ–∫—Ç
                    </button>
                    <button className="btn-secondary">
                      –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  )
} 