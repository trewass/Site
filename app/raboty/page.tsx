// –ü–õ–ê–ù –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –°–¢–†–ê–ù–ò–¶–´ –†–ê–ë–û–¢

// 1. –°–û–ó–î–ê–¢–¨ –ü–û–õ–Ø –í AIRTABLE –í–†–£–ß–ù–£–Æ:
// –ó–∞–π–¥–∏ –≤ —Å–≤–æ—é –±–∞–∑—É 2024-2025 –∏ –¥–æ–±–∞–≤—å —ç—Ç–∏ –ø–æ–ª—è:

// ‚úÖ "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞" - Long text (–º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç)
// ‚úÖ "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã" - Single line text
// ‚úÖ "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏" - Long text  
// ‚úÖ "–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è" - Single line text
// ‚úÖ "–°—Ç–æ–∏–º–æ—Å—Ç—å" - Single line text (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–æ—Ç 700 —Ç—ã—Å")

// 2. –ü–û–õ–ù–´–ô –ö–û–î –î–õ–Ø @app/raboty/page.tsx:

'use client'
import Header from '@/components/Header'
import { useState, useEffect } from 'react'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Airtable
const AIRTABLE_CONFIG = {
  API_KEY: 'patQfujQaKiRKW0ix.9968ac4d5d84d30dc7f7ac663c993282324a6cfb07125313b2c58268f943b4ee',
  BASE_ID: 'appayVD9m1J1bR13Z',
  TABLE_ID: 'tblg1UR9TmB4gLS7i'
}

interface WorkPhoto {
  id: string
  mediaUrl: string
  mediaType: 'image' | 'video'
  description?: string
  projectName: string
  city: string
  materials?: string
  features?: string
  duration?: string
  cost?: string
  projectDescription?: string
}

interface Work {
  id: string
  projectName: string
  city: string
  category: string
  previewImage: string
  photos: WorkPhoto[]
  description: string
  materials: string
  features: string
  duration: string
  cost: string
}

// Fallback –¥–∞–Ω–Ω—ã–µ
const FALLBACK_WORKS: Work[] = [
  {
    id: 'work-1',
    projectName: '–ö—É—Ö–Ω—è –≤ –Ø–ª—Ç–µ',
    city: '–Ø–ª—Ç–∞',
    category: '–ö—É—Ö–Ω–∏',
    previewImage: 'https://via.placeholder.com/600x400/4F46E5/FFFFFF?text=–ö—É—Ö–Ω—è+–Ø–ª—Ç–∞',
    photos: [],
    description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫—É—Ö–Ω—è —Å –æ—Å—Ç—Ä–æ–≤–æ–º, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –≤ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ',
    materials: '–ú–î–§ –≤ —ç–º–∞–ª–∏, —Å—Ç–æ–ª–µ—à–Ω–∏—Ü–∞ –∏–∑ –∫–≤–∞—Ä—Ü–∞',
    features: '–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞, —Å–∏—Å—Ç–µ–º–∞ soft-close',
    duration: '45 –¥–Ω–µ–π',
    cost: '–æ—Ç 850 —Ç—ã—Å'
  }
]

export default function RabotyPage() {
  const [works, setWorks] = useState<Work[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [selectedCategory, setSelectedCategory] = useState<string>('–í—Å–µ —Ä–∞–±–æ—Ç—ã')
  const [selectedWork, setSelectedWork] = useState<Work | null>(null)
  const [isModalOpen, setIsModalOpen] = useState(false)
  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0)

  const categories = ['–í—Å–µ —Ä–∞–±–æ—Ç—ã', '–ö—É—Ö–Ω–∏', '–ì–∞—Ä–¥–µ—Ä–æ–±—ã', '–í–∞–Ω–Ω—ã–µ', '–î–æ–º–∞ –ø–æ–¥ –∫–ª—é—á']

  useEffect(() => {
    loadWorksFromAirtable()
  }, [])

  function extractCityFromProjectName(projectName: string): string {
    if (projectName.toLowerCase().includes('—è–ª—Ç–∞')) return '–Ø–ª—Ç–∞'
    if (projectName.toLowerCase().includes('—Ñ–µ–æ–¥–æ—Å–∏—è')) return '–§–µ–æ–¥–æ—Å–∏—è'  
    if (projectName.toLowerCase().includes('–±–∞—Ö—á–∏—Å–∞—Ä–∞–π')) return '–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π'
    if (projectName.toLowerCase().includes('–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä')) return '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä'
    if (projectName.toLowerCase().includes('—Å–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å')) return '–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å'
    return '–ö—Ä—ã–º'
  }

  function extractCategoryFromProjectName(projectName: string): string {
    const name = projectName.toLowerCase()
    if (name.includes('–∫—É—Ö–Ω—è') || name.includes('–º–∞—Ä–∏–Ω–∞') || name.includes('–∏—Ä–∏–Ω–∞')) return '–ö—É—Ö–Ω–∏'
    if (name.includes('–≥–∞—Ä–¥–µ—Ä–æ–±') || name.includes('—à–∫–∞—Ñ')) return '–ì–∞—Ä–¥–µ—Ä–æ–±—ã'
    if (name.includes('–≤–∞–Ω–Ω–∞—è') || name.includes('–≤–∞–Ω–Ω–∞')) return '–í–∞–Ω–Ω—ã–µ'
    if (name.includes('–¥–æ–º') || name.includes('–∫–æ—Ç—Ç–µ–¥–∂')) return '–î–æ–º–∞ –ø–æ–¥ –∫–ª—é—á'
    return '–ö—É—Ö–Ω–∏' // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }

  async function loadWorksFromAirtable() {
    try {
      console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞–±–æ—Ç—ã –∏–∑ Airtable...')
      
      // 1. –î–û–ë–ê–í–õ–Ø–Æ –û–¢–õ–ê–î–ö–£
      const requestUrl = `https://api.airtable.com/v0/${AIRTABLE_CONFIG.BASE_ID}/${AIRTABLE_CONFIG.TABLE_ID}?filterByFormula=IF({–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç—ã}, TRUE(), FALSE())`
      console.log('üîç URL –∑–∞–ø—Ä–æ—Å–∞:', requestUrl)
      console.log('üîë API Key:', AIRTABLE_CONFIG.API_KEY)
      
      const response = await fetch(requestUrl, {
        headers: { 
          'Authorization': `Bearer ${AIRTABLE_CONFIG.API_KEY}`,
          'Content-Type': 'application/json'
        }
      })
      
      // 2. –î–û–ë–ê–í–õ–Ø–Æ –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ö–ê–ñ–î–û–ì–û –®–ê–ì–ê
      console.log('üìä Response status:', response.status)
      console.log('üìä Response statusText:', response.statusText)
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`)
      }
      
      const data = await response.json()
      console.log('üì¶ Raw data:', data)
      console.log('üìù Records found:', data.records?.length)
      
      if (!data.records || data.records.length === 0) {
        console.log('‚ö†Ô∏è –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π —Å –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç—ã=1')
        setWorks(FALLBACK_WORKS)
        setLoading(false)
        return
      }
      
      // 3. –£–ë–ò–†–ê–Æ –ì–†–£–ü–ü–ò–†–û–í–ö–£ - –ü–†–û–°–¢–û–ô –ü–û–î–•–û–î
      console.log('üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ –±–µ–∑ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏...')
      
      const result: Work[] = []
      
      data.records.forEach((record: any, index: number) => {
        console.log(`üìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å—å ${index + 1}:`, record.fields)
        
        const projectName = record.fields['–û–±—ä–µ–∫—Ç'] || '–ü—Ä–æ–µ–∫—Ç'
        const city = extractCityFromProjectName(projectName)
        const category = extractCategoryFromProjectName(projectName)
        
        const mediaUrl = record.fields['–ü—Ä–µ–≤—å—é'] && record.fields['–¢–∏–ø —Ñ–∞–π–ª–∞'] !== 'video/mp4' 
          ? record.fields['–ü—Ä–µ–≤—å—é'][0]?.url 
          : record.fields['–°—Å—ã–ª–∫–∞']
        
        // –°–æ–∑–¥–∞–µ–º –æ–¥–Ω—É —Ä–∞–±–æ—Ç—É –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
        const work: Work = {
          id: `work-${index + 1}`,
          projectName,
          city,
          category,
          previewImage: mediaUrl,
          photos: [{
            id: record.id,
            mediaUrl: mediaUrl,
            mediaType: record.fields['–¢–∏–ø —Ñ–∞–π–ª–∞'] === 'video/mp4' ? 'video' : 'image',
            description: record.fields['–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ'] || '',
            projectName,
            city,
            materials: record.fields['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã'] || '',
            features: record.fields['–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏'] || '',
            duration: record.fields['–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'] || '45 –¥–Ω–µ–π',
            cost: record.fields['–°—Ç–æ–∏–º–æ—Å—Ç—å'] || '',
            projectDescription: record.fields['–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞'] || ''
          }],
          description: record.fields['–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞'] || `–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç ${projectName} –≤ –≥–æ—Ä–æ–¥–µ ${city}`,
          materials: record.fields['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã'] || '–ú–î–§ –≤ —ç–º–∞–ª–∏, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞',
          features: record.fields['–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏'] || '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å',
          duration: record.fields['–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'] || '45 –¥–Ω–µ–π',
          cost: record.fields['–°—Ç–æ–∏–º–æ—Å—Ç—å'] || '–æ—Ç 700 —Ç—ã—Å'
        }
        
        result.push(work)
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞: ${work.projectName} (${work.city})`)
      })
      
      console.log('‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç:', result)
      console.log('üìä –í—Å–µ–≥–æ —Ä–∞–±–æ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', result.length)
      setWorks(result)
      setLoading(false)
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–±–æ—Ç:', error)
      setWorks(FALLBACK_WORKS)
      setLoading(false)
    }
  }

  const filteredWorks = selectedCategory === '–í—Å–µ —Ä–∞–±–æ—Ç—ã' 
    ? works 
    : works.filter(work => work.category === selectedCategory)

  const openWorkModal = (work: Work) => {
    setSelectedWork(work)
    setCurrentPhotoIndex(0)
    setIsModalOpen(true)
  }

  const closeModal = () => {
    setIsModalOpen(false)
    setSelectedWork(null)
    setCurrentPhotoIndex(0)
  }

  if (loading) {
    return (
      <>
        <Header />
        <main className="min-h-screen bg-white">
          <section className="py-24 bg-neutral-50">
            <div className="container-custom">
              <div className="mx-auto max-w-2xl text-center">
                <h1 className="heading-xl mb-6">–ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã</h1>
                <div className="flex items-center justify-center gap-2">
                  <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-neutral-600"></div>
                  <p className="text-body text-neutral-600">–ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞–±–æ—Ç—ã...</p>
                </div>
              </div>
            </div>
          </section>
        </main>
      </>
    )
  }

  return (
    <>
      <Header />
      <main className="min-h-screen bg-white">
        {/* Hero Section */}
        <section className="py-24 bg-neutral-50">
          <div className="container-custom">
            <div className="mx-auto max-w-2xl text-center">
              <h1 className="heading-xl mb-6">–ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã</h1>
              <p className="text-body text-neutral-600 mb-8">
                –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ –º—ã —Å–æ–∑–¥–∞–µ–º –¥–ª—è –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. 
                –ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç ‚Äî —ç—Ç–æ –∏—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞.
              </p>
              
              {/* –§–∏–ª—å—Ç—Ä—ã */}
              <div className="flex flex-wrap justify-center gap-2 mb-8">
                {categories.map((category) => (
                  <button
                    key={category}
                    onClick={() => setSelectedCategory(category)}
                    className={`px-4 py-2 rounded-full text-sm font-medium transition-all ${
                      selectedCategory === category
                        ? 'bg-neutral-900 text-white'
                        : 'bg-white text-neutral-600 hover:bg-neutral-100'
                    }`}
                  >
                    {category}
                  </button>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* Works Grid */}
        <section className="py-24 bg-white">
          <div className="container-custom">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {filteredWorks.map((work) => (
                <div 
                  key={work.id} 
                  className="group cursor-pointer"
                  onClick={() => openWorkModal(work)}
                >
                  <div className="aspect-[4/3] bg-neutral-100 rounded-lg overflow-hidden mb-4 group-hover:scale-[1.02] transition-transform duration-200">
                    <img 
                      src={work.previewImage} 
                      alt={`${work.projectName} - ${work.city}`}
                      className="w-full h-full object-cover"
                    />
                  </div>
                  
                  <div className="space-y-2">
                    <div className="flex items-center justify-between">
                      <h3 className="font-semibold text-neutral-900 group-hover:text-neutral-700 transition-colors">
                        {work.projectName}
                      </h3>
                      <span className="text-xs bg-neutral-100 px-2 py-1 rounded-full text-neutral-600">
                        {work.city}
                      </span>
                    </div>
                    
                    <p className="text-sm text-neutral-600 line-clamp-2">
                      {work.description}
                    </p>
                    
                    <div className="flex items-center justify-between text-xs text-neutral-500">
                      <span>{work.duration}</span>
                      <span>{work.cost}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      </main>

      {/* Modal –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–±–æ—Ç—ã */}
      {isModalOpen && selectedWork && (
        <div className="fixed inset-0 bg-black bg-opacity-95 z-50 overflow-y-auto">
          <div className="min-h-screen flex items-start justify-center p-4">
            <div className="relative w-full max-w-6xl bg-white rounded-lg overflow-hidden">
              
              {/* Header */}
              <div className="bg-neutral-50 px-6 py-4 border-b">
                <div className="flex items-center justify-between">
                  <div>
                    <h2 className="text-2xl font-bold text-neutral-900">
                      {selectedWork.projectName}
                    </h2>
                    <p className="text-neutral-600">{selectedWork.city} ‚Ä¢ {selectedWork.category}</p>
                  </div>
                  <button 
                    onClick={closeModal}
                    className="text-neutral-500 hover:text-neutral-700 transition-colors"
                  >
                    <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
              </div>

              {/* Content */}
              <div className="flex flex-col lg:flex-row">
                
                {/* Left Panel */}
                <div className="lg:w-1/3 p-6 border-r border-neutral-200">
                  <h3 className="text-lg font-semibold mb-4">–û –ø—Ä–æ–µ–∫—Ç–µ</h3>
                  
                  <div className="space-y-4 mb-6">
                    <div>
                      <h4 className="font-medium text-neutral-900 mb-2">–û–ø–∏—Å–∞–Ω–∏–µ</h4>
                      <p className="text-sm text-neutral-600 leading-relaxed">
                        {selectedWork.description}
                      </p>
                    </div>
                    
                    <div>
                      <h4 className="font-medium text-neutral-900 mb-2">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã</h4>
                      <p className="text-sm text-neutral-600">
                        {selectedWork.materials}
                      </p>
                    </div>
                    
                    <div>
                      <h4 className="font-medium text-neutral-900 mb-2">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h4>
                      <p className="text-sm text-neutral-600">
                        {selectedWork.features}
                      </p>
                    </div>
                    
                    <div className="grid grid-cols-2 gap-4 text-sm">
                      <div>
                        <span className="font-medium text-neutral-900">–°—Ä–æ–∫:</span>
                        <div className="text-neutral-600">{selectedWork.duration}</div>
                      </div>
                      <div>
                        <span className="font-medium text-neutral-900">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                        <div className="text-neutral-600">{selectedWork.cost}</div>
                      </div>
                    </div>
                  </div>

                  {/* Gallery Preview */}
                  <h4 className="font-medium text-neutral-900 mb-3">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ ({selectedWork.photos.length})</h4>
                  <div className="grid grid-cols-3 gap-2">
                    {selectedWork.photos.slice(0, 9).map((photo, index) => (
                      <div 
                        key={photo.id}
                        className={`aspect-square bg-neutral-100 rounded-lg overflow-hidden cursor-pointer border-2 transition-all ${
                          index === currentPhotoIndex ? 'border-neutral-800' : 'border-transparent hover:border-neutral-300'
                        }`}
                        onClick={() => setCurrentPhotoIndex(index)}
                      >
                        <img 
                          src={photo.mediaUrl} 
                          alt={`${selectedWork.projectName} - ${index + 1}`}
                          className="w-full h-full object-cover"
                        />
                      </div>
                    ))}
                  </div>
                </div>

                {/* Right Panel - Main Image */}
                <div className="lg:w-2/3 p-6">
                  <div className="aspect-[4/3] bg-neutral-100 rounded-lg overflow-hidden mb-4">
                    <img 
                      src={selectedWork.photos[currentPhotoIndex]?.mediaUrl}
                      alt={`${selectedWork.projectName} - —Ñ–æ—Ç–æ ${currentPhotoIndex + 1}`}
                      className="w-full h-full object-contain cursor-pointer"
                      onClick={() => {
                        const img = selectedWork.photos[currentPhotoIndex]?.mediaUrl;
                        if (img) {
                          const newWindow = window.open('', '_blank');
                          if (newWindow) {
                            newWindow.document.write(`
                              <html>
                                <head><title>${selectedWork.projectName} - –§–æ—Ç–æ ${currentPhotoIndex + 1}</title></head>
                                <body style="margin:0;background:#000;display:flex;align-items:center;justify-content:center;min-height:100vh;">
                                  <img src="${img}" style="max-width:100%;max-height:100vh;object-fit:contain;" />
                                </body>
                              </html>
                            `);
                          }
                        }
                      }}
                    />
                  </div>

                  {/* Image Description */}
                  <div className="bg-neutral-50 rounded-lg p-4 mb-6">
                    <h4 className="font-medium text-neutral-900 mb-2">
                      –§–æ—Ç–æ {currentPhotoIndex + 1} –∏–∑ {selectedWork.photos.length}
                    </h4>
                    <p className="text-sm text-neutral-600">
                      {selectedWork.photos[currentPhotoIndex]?.description || 
                      `–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ–µ–∫—Ç–∞ ${selectedWork.projectName} –≤ –≥–æ—Ä–æ–¥–µ ${selectedWork.city}`}
                    </p>
                  </div>

                  {/* Action Buttons */}
                  <div className="flex gap-4">
                    <button 
                      className="btn-primary"
                      onClick={() => {
                        const message = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –ø–æ—Ö–æ–∂–∏–π –Ω–∞ "${selectedWork.projectName}" –∏–∑ –≥–æ—Ä–æ–¥–∞ ${selectedWork.city}. –û–±—Å—É–¥–∏–º –¥–µ—Ç–∞–ª–∏?`;
                        const whatsappUrl = `https://wa.me/79780000000?text=${encodeURIComponent(message)}`;
                        window.open(whatsappUrl, '_blank');
                      }}
                    >
                      –ó–∞–∫–∞–∑–∞—Ç—å –ø–æ—Ö–æ–∂–∏–π –ø—Ä–æ–µ–∫—Ç
                    </button>
                    <button 
                      className="btn-secondary"
                      onClick={() => window.location.href = '/contacts'}
                    >
                      –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  )
}

// 3. –ü–û–õ–Ø –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –í AIRTABLE:
/*
–ó–∞–π–¥–∏ –≤ –±–∞–∑—É 2024-2025 –∏ –¥–æ–±–∞–≤—å —ç—Ç–∏ –ø–æ–ª—è:

1. "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞" - Long text
   –ü—Ä–∏–º–µ—Ä: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫—É—Ö–Ω—è –¥–ª—è —Å–µ–º—å–∏ –∏–∑ 4 —á–µ–ª–æ–≤–µ–∫. –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —É–¥–µ–ª–∏–ª–∏ —ç—Ä–≥–æ–Ω–æ–º–∏–∫–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏."

2. "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã" - Single line text  
   –ü—Ä–∏–º–µ—Ä: "–ú–î–§ –≤ —ç–º–∞–ª–∏, —Å—Ç–æ–ª–µ—à–Ω–∏—Ü–∞ –∏–∑ –∫–≤–∞—Ä—Ü–∞, —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞ Blum"

3. "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏" - Long text
   –ü—Ä–∏–º–µ—Ä: "–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞, —Å–∏—Å—Ç–µ–º–∞ push-to-open, LED –ø–æ–¥—Å–≤–µ—Ç–∫–∞, –æ—Å—Ç—Ä–æ–≤ —Å –±–∞—Ä–Ω–æ–π —Å—Ç–æ–π–∫–æ–π"

4. "–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è" - Single line text
   –ü—Ä–∏–º–µ—Ä: "45 –¥–Ω–µ–π"

5. "–°—Ç–æ–∏–º–æ—Å—Ç—å" - Single line text  
   –ü—Ä–∏–º–µ—Ä: "–æ—Ç 850 —Ç—ã—Å"
*/

// 4. –ö–ê–ö –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨:
// - –û—Ç–º–µ—Ç—å –≥–∞–ª–æ—á–∫–æ–π "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç—ã" —É –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è /raboty
// - –ó–∞–ø–æ–ª–Ω–∏ –Ω–æ–≤—ã–µ –ø–æ–ª—è –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
// - –°–∞–π—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Ç—è–Ω–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–∫–∞–∂–µ—Ç –≤ –∫—Ä–∞—Å–∏–≤–æ–º –≤–∏–¥–µ